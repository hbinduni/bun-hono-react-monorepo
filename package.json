{
  "name": "bun-hono-react-monorepo",
  "version": "1.0.0",
  "private": true,
  "description": "Full-stack monorepo template with Bun, Hono, React, PostgreSQL, Docker, and Turborepo",
  "packageManager": "bun@1.3.0",
  "workspaces": [
    "server",
    "client",
    "packages/*"
  ],
  "scripts": {
    "dev": "turbo dev",
    "dev:server": "bun run --filter='@monorepo/server' dev",
    "dev:client": "bun run --filter='@monorepo/client' dev",
    "build": "turbo build",
    "build:server": "bun run --filter='@monorepo/server' build",
    "build:client": "bun run --filter='@monorepo/client' build",
    "typecheck": "bun x tsc --noEmit -p tsconfig.json",
    "format": "biome format --write .",
    "lint": "biome lint .",
    "check": "biome check .",
    "check:fix": "biome check --write .",
    "check:all": "bun run typecheck && bun run check",
    "check:all:fix": "bun run typecheck && bun run check:fix",
    "clean": "rm -rf dist coverage",
    "test": "bun test",
    "test:watch": "bun test --watch",
    "test:coverage": "bun test --coverage",
    "test:health": "bun test tests/health-check.test.ts",
    "precommit": "bun run check:all:fix && bun test",
    "db:create": "dotenv -e server/.env -- sh -c 'psql \"$DATABASE_URL\" -f db/schema.sql'",
    "db:drop": "dotenv -e server/.env -- sh -c 'psql \"$DATABASE_URL\" -c \"DROP SCHEMA IF EXISTS public CASCADE; CREATE SCHEMA public;\"'",
    "db:seed": "dotenv -e server/.env -- sh -c 'psql \"$DATABASE_URL\" -f db/seed.sql'",
    "db:run": "dotenv -e server/.env -- sh -c 'psql \"$DATABASE_URL\" -f'",
    "db:fresh": "bun run db:drop && bun run db:create && bun run db:seed"
  },
  "devDependencies": {
    "@biomejs/biome": "^2.2.7",
    "@types/bun": "latest",
    "dotenv-cli": "^10.0.0",
    "turbo": "^2.5.8",
    "typescript": "~5.9.3"
  }
}
